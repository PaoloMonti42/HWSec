;# test program for forwarding logic
;#
;# return values written starting at address baseRAM=1024
org 0000

addition:	addi $4, $0, 0		; initialize opp2 = 0
		addi $6, $0, 1		; initialize mask2 = 00000001h	
		addi $9, $0, 32		; initialize loop2 = 32
		addi $10, $0, 1		; initialize flag end
		lui  $7, 65535		; initialize result reg = 1111111...11111
		addi $7, $0, 65535
		addi $2, $0, 3		; initialize flag debug
		addi $1, $0, 0
		lui  $1, 16384		; initialize register to check mask overflow

l1:		addi $3, $0, 127	; initialize opp1 = 0
		addi $5, $3, 127	;		
		addi $8, $5, 31		; 
		sub  $9, $8, $10        ; 

		sw $9, 1024($0)		; store result in baseRAM = 1024
		sw $8, 1024($0)		; store result in baseRAM = 1024
		sw $5, 1024($0)		; store result in baseRAM = 1024
		sw $3, 1024($0)		; store result in baseRAM = 1024
		lw $4, 1024($0)
		lw $5, 1024($0)
end: 		j end
